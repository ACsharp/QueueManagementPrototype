//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TicketingSolution.Messaging.QueueWriting.Msmq.MsmqWcfWrapper {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MsmqWcfWrapper.IMsmqQueueProcessor")]
    internal interface IMsmqQueueProcessor {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMsmqQueueProcessor/CreateOrderRequest")]
        void CreateOrderRequest(TicketingSolution.BusinessEntities.OrderRequest orderRequest);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMsmqQueueProcessor/CreateOrderRequest")]
        System.Threading.Tasks.Task CreateOrderRequestAsync(TicketingSolution.BusinessEntities.OrderRequest orderRequest);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IMsmqQueueProcessorChannel : TicketingSolution.Messaging.QueueWriting.Msmq.MsmqWcfWrapper.IMsmqQueueProcessor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class MsmqQueueProcessorClient : System.ServiceModel.ClientBase<TicketingSolution.Messaging.QueueWriting.Msmq.MsmqWcfWrapper.IMsmqQueueProcessor>, TicketingSolution.Messaging.QueueWriting.Msmq.MsmqWcfWrapper.IMsmqQueueProcessor {
        
        public MsmqQueueProcessorClient() {
        }
        
        public MsmqQueueProcessorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MsmqQueueProcessorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MsmqQueueProcessorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MsmqQueueProcessorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateOrderRequest(TicketingSolution.BusinessEntities.OrderRequest orderRequest) {
            base.Channel.CreateOrderRequest(orderRequest);
        }
        
        public System.Threading.Tasks.Task CreateOrderRequestAsync(TicketingSolution.BusinessEntities.OrderRequest orderRequest) {
            return base.Channel.CreateOrderRequestAsync(orderRequest);
        }
    }
}
